AWSTemplateFormatVersion: 2010-09-09

Description: RDS cluster with writer and reader instance

Parameters:
  UniqueAppName:
    Type: String
  SubnetId1:
    Type: AWS::EC2::Subnet::Id
  SubnetId2:
    Type: AWS::EC2::Subnet::Id
  SecurityGroupList:
    Type: List<AWS::EC2::SecurityGroup::Id>
  DatabaseMasterUser:
    Default: pimcoreadmin
    Type: String
    Description: Database admin account name
  DatabaseUser:
    Default: pimcoreapp
    Type: String
    Description: Database admin account name
  DatabaseName:
    Default: PimcoreDB
    Type: String
    Description: Database name
    MinLength: 1
    MaxLength: 30
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters
  DatabaseEngine:
    Default: aurora-mysql
    Type: String
    Description: Database engines - Aurora MySQL or Aurora PostgreSQL
    ConstraintDescription: Choose an engine from the drop down
    AllowedValues:
      - aurora-mysql
  ActivateReadReplica:
    Type: String
    Default: false
  EncryptionAtRest:
    Default: false
    Type: String
    Description: The optional flag for encryption at rest (db.t2.small and above)
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false
  DatabaseInstanceClass:
    Default: db.t2.small
    Type: String
    Description: "Database instance class, e.g. db.t2.micro (free tier) - Engine support: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"
    ConstraintDescription: DB instance class not supported
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge

  AllocatedStorage:
    Default: '7'
    Type: String
    Description: The size of the database (GiB)

#  LambdaDbUserCreationRole:
#      Type: String

Conditions:
  ActivateReadReplica: !Equals [ !Ref ActivateReadReplica, true ]
Resources:

# @see https://aws.amazon.com/premiumsupport/knowledge-center/users-connect-rds-iam/:
# create a DB user with IAM authentication
#
  # @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
  PimcoreRDSMasterSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '${UniqueAppName}/db-master-secret'
      Description: !Sub "RDS master user password (user ${DatabaseMasterUser})."
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DatabaseMasterUser}"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludePunctuation: true
      Tags:
        - Key: Name
          Value: !Sub '${UniqueAppName}-master-secret'

  PimcoreAppSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '${UniqueAppName}/db-pimcore-app-secret'
      Description: !Sub "Secret that should be used by Pimcore applications to access the database (user ${DatabaseUser})."
      GenerateSecretString:
        #no json to simplify ECS service integration
        PasswordLength: 30
        ExcludePunctuation: true
      Tags:
        - Key: Name
          Value: !Sub '${UniqueAppName}-db-app-secret'

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Database subnet group
      SubnetIds:
        - !Ref SubnetId1
        - !Ref SubnetId2
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  PimcoreRDSDBClusterParameterGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Description: "CloudFormation Sample Aurora Cluster Parameter Group"
      #Family: mysql5.6 #mariadb10.4 # call aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" to see all parameters
      Family: aurora-mysql5.7
      Parameters:
        # @see https://pimcore.com/docs/6.x/Development_Documentation/Installation_and_Upgrade/System_Requirements.html#page_System-Variables
        innodb_file_format: Barracuda
        innodb_large_prefix: 1
        innodb_file_per_table: 1
        innodb_default_row_format: DYNAMIC #see https://github.com/laravel/framework/issues/22660
        # @see https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.Concepts.MySQL.html#USER_LogAccess.MySQL.Generallog
        slow_query_log: 1
        long_query_time: 5
        log_queries_not_using_indexes: 0
        general_log: 0

  PimcoreDbCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: !Ref DatabaseEngine
      #EngineVersion: "5.7.mysql_aurora.2.09.0"
      MasterUsername: !Ref DatabaseMasterUser
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${PimcoreRDSMasterSecret}::password}}'
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest
      DatabaseName: !Ref DatabaseName
      DeletionProtection: false
      #BackupRetentionPeriod: 1
      #EnableIAMDatabaseAuthentication: true #TODO - test @see https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html
                                             # >>For Aurora MySQL, all DB instance classes are supported, except for db.t2.small and db.t3.small.
      EnableHttpEndpoint: true # enable Data API (only works for Aurora serverless?)
      DBClusterParameterGroupName: !Ref PimcoreRDSDBClusterParameterGroup #!If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      VpcSecurityGroupIds: !Ref SecurityGroupList
    DependsOn: DatabaseSubnetGroup

  PimcoreDBWriterInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: !Ref DatabaseEngine
      DBClusterIdentifier: !Ref PimcoreDbCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest
      #DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      CopyTagsToSnapshot: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
    DependsOn: PimcoreDbCluster

  PimcoreDBReaderInstance:
    Type: AWS::RDS::DBInstance
    Condition: ActivateReadReplica
    Properties:
      Engine: !Ref DatabaseEngine
      DBClusterIdentifier: !Ref PimcoreDbCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      StorageEncrypted: !Ref EncryptionAtRest

      #DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
      CopyTagsToSnapshot: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
    DependsOn: PimcoreDbCluster

Outputs:
  DbPrimaryEndpoint:
    Value: !GetAtt PimcoreDBWriterInstance.Endpoint.Address
  DbPrimaryPort:
    Value: !GetAtt PimcoreDBWriterInstance.Endpoint.Port
  DbReadEndpoint:
    Value: !If [ ActivateReadReplica, !GetAtt PimcoreDBReaderInstance.Endpoint.Address, '' ]
  DbReadPort:
    Value: !If [ ActivateReadReplica, !GetAtt PimcoreDBReaderInstance.Endpoint.Port, 0 ]
  DbName:
    Value: !Ref DatabaseName
  DbMasterUser:
    Value: !Ref DatabaseMasterUser
  DbMasterSecret:
    Value: !Ref PimcoreRDSMasterSecret
  DbMasterPassword:
    Value: !Sub '{{resolve:secretsmanager:${PimcoreRDSMasterSecret}::password}}'
  DbUser:
    Value: !Ref DatabaseUser
  DbUserSecret:
    Value: !Ref PimcoreAppSecret