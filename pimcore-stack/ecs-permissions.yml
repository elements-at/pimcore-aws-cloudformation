AWSTemplateFormatVersion: 2010-09-09
Description: "ECS cluster permissions for blue/green deployment."

Parameters:
  UniqueAppName:
    Type: String
  VpcId:
    Type: String

Resources:
  SecurityGroupBlueServices:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub  '${UniqueAppName}-sg-blue-services'
      GroupDescription: !Sub '${UniqueAppName} - Security group blue services'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0 # restrict to load balancer?
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      SecurityGroupEgress:
        - FromPort: 80
          CidrIp: 0.0.0.0/0
          ToPort: 80
          IpProtocol: tcp
          Description: 'ECR Image Pull'
        - FromPort: 53
          CidrIp: 0.0.0.0/0
          ToPort: 53
          IpProtocol: UDP
          Description: 'ECR Image Pull'
        - FromPort: 53
          CidrIp: 0.0.0.0/0
          ToPort: 53
          IpProtocol: TCP
          Description: 'ECR Image Pull'
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic (**remove to prevent datasource access**)
          FromPort: -1
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub '${UniqueAppName}-sg-blue'

  SecurityGroupBlueIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from other containers in the same security group.
      GroupId: !Ref SecurityGroupBlueServices
      IpProtocol: -1
      SourceSecurityGroupId: !Ref SecurityGroupBlueServices

  SecurityGroupGreenServices:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub  '${UniqueAppName}-sg-green-services'
      GroupDescription: !Sub '${UniqueAppName} - Security group Green'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      SecurityGroupEgress: # TCP 53, UDP 53, HTTPS (443) FOR ECR
        - FromPort: 80
          CidrIp: 0.0.0.0/0
          ToPort: 80
          IpProtocol: tcp
          Description: 'ECR Image Pull'
        - FromPort: 53
          CidrIp: 0.0.0.0/0
          ToPort: 53
          IpProtocol: UDP
          Description: 'ECR Image Pull'
        - FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
          IpProtocol: TCP
          Description: 'ECR Image Pull'
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic (**remove to prevent datasource access**)
          FromPort: -1
          IpProtocol: -1
       # - CidrIp: 127.0.0.1/32
       #   Description: Allow no outbound traffic (for blue/green switch)
       #   #FromPort: 80
       #   IpProtocol: -1
       #   #IpProtocol: tcp
       #   #ToPort: 80
      Tags:
        - Key: Name
          Value: !Sub '${UniqueAppName}-sg-green'

  SecurityGroupGreenIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from other containers in the same security group.
      GroupId: !Ref SecurityGroupGreenServices
      IpProtocol: -1
      SourceSecurityGroupId: !Ref SecurityGroupGreenServices

Outputs:
  SecurityGroupBlue:
    Value: !Ref SecurityGroupBlueServices
  SecurityGroupGreen:
    Value: !Ref SecurityGroupGreenServices